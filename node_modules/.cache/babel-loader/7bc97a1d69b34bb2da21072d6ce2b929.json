{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gccc1\\\\Desktop\\\\react-complete-guide\\\\food-order-app\\\\01-starting-project\\\\src\\\\store\\\\CartContext.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./store-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    let updatedItems;\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const idExistingItem = state.items.findIndex(item => item.id === action.item.id);\n    const existingItme = state.items[idExistingItem];\n\n    if (existingItme) {\n      let updatedItme = { ...existingItme,\n        amount: existingItme.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[idExistingItem] = updatedItme;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItme = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items, updatedItme];\n      updatedItems[existingItemIndex] = updatedItme;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, cartDispatcher] = useReducer(cartReducer, defaultCartState);\n\n  const addItemtoCartHandler = item => {\n    cartDispatcher({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    cartDispatcher({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemtoCartHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"Ilg1l0dJ3UzHRvi71PW5Wjez0fc=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/gccc1/Desktop/react-complete-guide/food-order-app/01-starting-project/src/store/CartContext.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","updatedTotalAmount","item","price","amount","idExistingItem","findIndex","id","existingItme","updatedItme","concat","existingItemIndex","existingItem","filter","CartProvider","props","cartState","cartDispatcher","addItemtoCartHandler","removeItemHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./store-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    let updatedItems;\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const idExistingItem = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n\r\n    const existingItme = state.items[idExistingItem];\r\n\r\n    if (existingItme) {\r\n      let updatedItme = {\r\n        ...existingItme,\r\n        amount: existingItme.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[idExistingItem] = updatedItme;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"REMOVE\") {\r\n    const existingItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n\r\n    const existingItem = state.items[existingItemIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n\r\n    let updatedItems;\r\n\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter((item) => item.id !== action.id);\r\n    } else {\r\n      const updatedItme = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...state.items, updatedItme];\r\n      updatedItems[existingItemIndex] = updatedItme;\r\n    }\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, cartDispatcher] = useReducer(cartReducer, defaultCartState);\r\n\r\n  const addItemtoCartHandler = (item) => {\r\n    cartDispatcher({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemHandler = (id) => {\r\n    cartDispatcher({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemtoCartHandler,\r\n    removeItem: removeItemHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}